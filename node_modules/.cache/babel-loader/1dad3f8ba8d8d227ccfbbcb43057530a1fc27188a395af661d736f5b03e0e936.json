{"ast":null,"code":"var _jsxFileName = \"D:\\\\00-DESARROLLO\\\\REACT\\\\Training\\\\PORTFOLIO\\\\TOMORROW-SHIFT\\\\src\\\\Components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\"; // Import styles from external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Navbar() {\n  _s();\n  // React hook to manage the state of the menu (open/closed)\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(!isOpen) // Toggles the menu when clicked\n        ,\n        className: \"menu-btn\",\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `menu ${isOpen ? \"open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          className: \"menu-link\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Page1\",\n          className: \"menu-link\",\n          children: \"Page 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useState","NavLink","jsxDEV","_jsxDEV","Navbar","_s","isOpen","setIsOpen","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/00-DESARROLLO/REACT/Training/PORTFOLIO/TOMORROW-SHIFT/src/Components/Navbar.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Navbar.css\"; // Import styles from external CSS file\r\n\r\nexport function Navbar() {\r\n  // React hook to manage the state of the menu (open/closed)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        {/* \"Hamburger\" button (☰) for mobile screens */}\r\n        <button\r\n          onClick={() => setIsOpen(!isOpen)} // Toggles the menu when clicked\r\n          className=\"menu-btn\"\r\n        >\r\n          ☰\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation menu */}\r\n      {/* \r\n        - The class \"menu\" always applies \r\n        - If isOpen is true, we also add the class \"open\" (this makes it visible on mobile)\r\n      */}\r\n      <ul className={`menu ${isOpen ? \"open\" : \"\"}`}>\r\n        <li>\r\n          {/* NavLink works like Link but also adds \"active\" class automatically when the route matches */}\r\n          <NavLink to=\"/\" className=\"menu-link\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Page1\" className=\"menu-link\">\r\n            Page 1\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,oBACEG,OAAA;IAAKK,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBN,OAAA;MAAKK,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAE/BN,OAAA;QACEO,OAAO,EAAEA,CAAA,KAAMH,SAAS,CAAC,CAACD,MAAM,CAAE,CAAC;QAAA;QACnCE,SAAS,EAAC,UAAU;QAAAC,QAAA,EACrB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAONX,OAAA;MAAIK,SAAS,EAAE,QAAQF,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAG,QAAA,gBAC5CN,OAAA;QAAAM,QAAA,eAEEN,OAAA,CAACF,OAAO;UAACc,EAAE,EAAC,GAAG;UAACP,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAEtC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACLX,OAAA;QAAAM,QAAA,eACEN,OAAA,CAACF,OAAO;UAACc,EAAE,EAAC,QAAQ;UAACP,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE3C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACT,EAAA,CApCeD,MAAM;AAAAY,EAAA,GAANZ,MAAM;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}