{"ast":null,"code":"var _jsxFileName = \"D:\\\\00-DESARROLLO\\\\REACT\\\\Training\\\\pages-backendless-DnD\\\\src\\\\Pages\\\\Page2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//import { DndContext, closestCorners } from \"@dnd-kit/core\";\n\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors, closestCorners } from \"@dnd-kit/core\";\nimport { arrayMove, sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\nimport { Column } from \"../Components/Column/Column\";\nimport { Input } from \"../Components/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Page2() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [tasks, setTasks] = useState([{\n    id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F1\",\n    title: \"Add tests to homepage\"\n  }, {\n    id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F2\",\n    title: \"Fix styling in about section\"\n  }, {\n    id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F3\",\n    title: \"Learn how to center a div\"\n  }]);\n  const addTask = title => {\n    setTasks(tasks => [...tasks, {\n      id: tasks.length + 1,\n      title\n    }]);\n  };\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const getTaskPos = id => tasks.findIndex(task => task.id === id);\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id === over.id) return;\n    setTasks(tasks => {\n      const originalPos = getTaskPos(active.id);\n      const newPos = getTaskPos(over.id);\n      return arrayMove(tasks, originalPos, newPos);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Contador PAGINA 2: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseEnter: () => setCount(count + 1),\n      children: \"Incrementar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCorners,\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        id: \"toDo\",\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Page2, \"biKFyLDHYTvmP4bQHDZuPW73wt0=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = Page2;\nvar _c;\n$RefreshReg$(_c, \"Page2\");","map":{"version":3,"names":["React","useState","DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","closestCorners","arrayMove","sortableKeyboardCoordinates","Column","Input","jsxDEV","_jsxDEV","Page2","_s","count","setCount","tasks","setTasks","id","title","addTask","length","sensors","coordinateGetter","getTaskPos","findIndex","task","handleDragEnd","event","active","over","originalPos","newPos","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onSubmit","collisionDetection","onDragEnd","_c","$RefreshReg$"],"sources":["D:/00-DESARROLLO/REACT/Training/pages-backendless-DnD/src/Pages/Page2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//import { DndContext, closestCorners } from \"@dnd-kit/core\";\r\n\r\nimport {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  closestCorners,\r\n} from \"@dnd-kit/core\";\r\nimport { arrayMove, sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\r\n\r\nimport { Column } from \"../Components/Column/Column\";\r\nimport { Input } from \"../Components/Input/Input\";\r\n\r\nexport function Page2() {\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F1\", title: \"Add tests to homepage\" },\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F2\", title: \"Fix styling in about section\" },\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F3\", title: \"Learn how to center a div\" },\r\n    ]);\r\n\r\n    const addTask = (title) => {\r\n        setTasks((tasks) => [...tasks, { id: tasks.length + 1, title }]);\r\n    };\r\n\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n        coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n    );\r\n\r\n    const getTaskPos = (id) => tasks.findIndex((task) => task.id === id);\r\n\r\n    const handleDragEnd = (event) => {\r\n        const { active, over } = event;\r\n\r\n        if (active.id === over.id) return;\r\n\r\n        setTasks((tasks) => {\r\n        const originalPos = getTaskPos(active.id);\r\n        const newPos = getTaskPos(over.id);\r\n\r\n        return arrayMove(tasks, originalPos, newPos);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Contador PAGINA 2: {count}</h1>\r\n\r\n            <button onMouseEnter={() => setCount(count + 1)}>\r\n                Incrementar\r\n            </button>\r\n\r\n            <Input onSubmit={addTask} />\r\n            <DndContext\r\n                sensors={sensors}\r\n                collisionDetection={closestCorners}\r\n                onDragEnd={handleDragEnd}\r\n            >\r\n                <Column id=\"toDo\" tasks={tasks} />\r\n            </DndContext>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}