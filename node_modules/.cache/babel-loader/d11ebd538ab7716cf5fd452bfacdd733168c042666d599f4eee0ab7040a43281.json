{"ast":null,"code":"import React,{useState}from\"react\";//import { DndContext, closestCorners } from \"@dnd-kit/core\";\nimport{DndContext,KeyboardSensor,PointerSensor,useSensor,useSensors,closestCorners}from\"@dnd-kit/core\";import{arrayMove,sortableKeyboardCoordinates}from\"@dnd-kit/sortable\";import{Column}from\"../Components/Column/Column\";import{Input}from\"../Components/Input/Input\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Page2(){const[tasks,setTasks]=useState([{id:\"077A33E6-4E58-4B7D-AE9E-86079E0564F1\",title:\"Add tests to homepage\"},{id:\"077A33E6-4E58-4B7D-AE9E-86079E0564F2\",title:\"Fix styling in about section\"},{id:\"077A33E6-4E58-4B7D-AE9E-86079E0564F3\",title:\"Learn how to center a div\"}]);const addTask=title=>{setTasks(tasks=>[...tasks,{id:tasks.length+1,title}]);};const sensors=useSensors(useSensor(PointerSensor),useSensor(KeyboardSensor,{coordinateGetter:sortableKeyboardCoordinates}));const getTaskPos=id=>tasks.findIndex(task=>task.id===id);const handleDragEnd=event=>{const{active,over}=event;if(active.id===over.id)return;setTasks(tasks=>{const originalPos=getTaskPos(active.id);const newPos=getTaskPos(over.id);return arrayMove(tasks,originalPos,newPos);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{onSubmit:addTask}),/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCorners,onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsx(Column,{id:\"toDo\",tasks:tasks})})]});}","map":{"version":3,"names":["React","useState","DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","closestCorners","arrayMove","sortableKeyboardCoordinates","Column","Input","jsx","_jsx","jsxs","_jsxs","Page2","tasks","setTasks","id","title","addTask","length","sensors","coordinateGetter","getTaskPos","findIndex","task","handleDragEnd","event","active","over","originalPos","newPos","children","onSubmit","collisionDetection","onDragEnd"],"sources":["D:/00-DESARROLLO/REACT/Training/PORTFOLIO/TOMORROW-SHIFT/src/Pages/Page2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//import { DndContext, closestCorners } from \"@dnd-kit/core\";\r\n\r\nimport {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  closestCorners,\r\n} from \"@dnd-kit/core\";\r\nimport { arrayMove, sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\r\n\r\nimport { Column } from \"../Components/Column/Column\";\r\nimport { Input } from \"../Components/Input/Input\";\r\n\r\nexport function Page2() {\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F1\", title: \"Add tests to homepage\" },\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F2\", title: \"Fix styling in about section\" },\r\n        { id: \"077A33E6-4E58-4B7D-AE9E-86079E0564F3\", title: \"Learn how to center a div\" },\r\n    ]);\r\n\r\n    const addTask = (title) => {\r\n        setTasks((tasks) => [...tasks, { id: tasks.length + 1, title }]);\r\n    };\r\n\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n        coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n    );\r\n\r\n    const getTaskPos = (id) => tasks.findIndex((task) => task.id === id);\r\n\r\n    const handleDragEnd = (event) => {\r\n        const { active, over } = event;\r\n\r\n        if (active.id === over.id) return;\r\n\r\n        setTasks((tasks) => {\r\n        const originalPos = getTaskPos(active.id);\r\n        const newPos = getTaskPos(over.id);\r\n\r\n        return arrayMove(tasks, originalPos, newPos);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Input onSubmit={addTask} />\r\n            <DndContext\r\n                sensors={sensors}\r\n                collisionDetection={closestCorners}\r\n                onDragEnd={handleDragEnd}\r\n            >\r\n                <Column id=\"toDo\" tasks={tasks} />\r\n            </DndContext>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC;AAEA,OACEC,UAAU,CACVC,cAAc,CACdC,aAAa,CACbC,SAAS,CACTC,UAAU,CACVC,cAAc,KACT,eAAe,CACtB,OAASC,SAAS,CAAEC,2BAA2B,KAAQ,mBAAmB,CAE1E,OAASC,MAAM,KAAQ,6BAA6B,CACpD,OAASC,KAAK,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,MAAO,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAEpB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,CAC/B,CAAEkB,EAAE,CAAE,sCAAsC,CAAEC,KAAK,CAAE,uBAAwB,CAAC,CAC9E,CAAED,EAAE,CAAE,sCAAsC,CAAEC,KAAK,CAAE,8BAA+B,CAAC,CACrF,CAAED,EAAE,CAAE,sCAAsC,CAAEC,KAAK,CAAE,2BAA4B,CAAC,CACrF,CAAC,CAEF,KAAM,CAAAC,OAAO,CAAID,KAAK,EAAK,CACvBF,QAAQ,CAAED,KAAK,EAAK,CAAC,GAAGA,KAAK,CAAE,CAAEE,EAAE,CAAEF,KAAK,CAACK,MAAM,CAAG,CAAC,CAAEF,KAAM,CAAC,CAAC,CAAC,CACpE,CAAC,CAED,KAAM,CAAAG,OAAO,CAAGjB,UAAU,CACtBD,SAAS,CAACD,aAAa,CAAC,CACxBC,SAAS,CAACF,cAAc,CAAE,CAC1BqB,gBAAgB,CAAEf,2BAClB,CAAC,CACL,CAAC,CAED,KAAM,CAAAgB,UAAU,CAAIN,EAAE,EAAKF,KAAK,CAACS,SAAS,CAAEC,IAAI,EAAKA,IAAI,CAACR,EAAE,GAAKA,EAAE,CAAC,CAEpE,KAAM,CAAAS,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAGF,KAAK,CAE9B,GAAIC,MAAM,CAACX,EAAE,GAAKY,IAAI,CAACZ,EAAE,CAAE,OAE3BD,QAAQ,CAAED,KAAK,EAAK,CACpB,KAAM,CAAAe,WAAW,CAAGP,UAAU,CAACK,MAAM,CAACX,EAAE,CAAC,CACzC,KAAM,CAAAc,MAAM,CAAGR,UAAU,CAACM,IAAI,CAACZ,EAAE,CAAC,CAElC,MAAO,CAAAX,SAAS,CAACS,KAAK,CAAEe,WAAW,CAAEC,MAAM,CAAC,CAC5C,CAAC,CAAC,CACN,CAAC,CAED,mBACIlB,KAAA,QAAAmB,QAAA,eAEIrB,IAAA,CAACF,KAAK,EAACwB,QAAQ,CAAEd,OAAQ,CAAE,CAAC,cAC5BR,IAAA,CAACX,UAAU,EACPqB,OAAO,CAAEA,OAAQ,CACjBa,kBAAkB,CAAE7B,cAAe,CACnC8B,SAAS,CAAET,aAAc,CAAAM,QAAA,cAEzBrB,IAAA,CAACH,MAAM,EAACS,EAAE,CAAC,MAAM,CAACF,KAAK,CAAEA,KAAM,CAAE,CAAC,CAC1B,CAAC,EAGZ,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}