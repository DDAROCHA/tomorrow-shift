{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{getTasks,saveEnviar}from\"../services/backend\";import{Spinner}from\"../Components/Spinner/Spinner\";import\"./Page1.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Page1(){const[tasks,setTasks]=useState([]);const[loading,setLoading]=useState(true);const[email,setEmail]=useState(\"\");const[sending,setSending]=useState(false);const baseHour=6;// los turnos arrancan a las 6am\nuseEffect(()=>{getTasks().then(results=>{const formatted=results.sort((a,b)=>a.Orden-b.Orden).map(item=>({id:item.objectId,title:item.Item||\"Untitled\",valor:item.Valor!=null?Number(item.Valor):1}));setTasks(formatted);setLoading(false);}).catch(err=>{console.error(\"Error fetching data:\",err.message);setLoading(false);});},[]);// Convierte hora en formato AM/PM\nconst formatHour=hour=>{const h=hour%24;const suffix=h>=12?\"pm\":\"am\";const display=h%12===0?12:h%12;return`${display}${suffix}`;};// Construye texto de turno\nconst buildShiftText=(task,index)=>{const startHour=baseHour+tasks.slice(0,index).reduce((acc,t)=>acc+t.valor,0);const endHour=startHour+task.valor;return`${task.title} from ${formatHour(startHour)} to ${formatHour(endHour)}`;};const handleSend=async()=>{if(!email){alert(\"Please enter an email address.\");return;}setSending(true);const lines=tasks.map((t,i)=>buildShiftText(t,i));const mensaje=`\n      <p>Hi, this is the full rotation for tomorrow's shift:</p>\n      <ul>\n        ${lines.map(line=>`<li>${line}</li>`).join(\"\")}\n      </ul>\n      <p>Sincerely,<br/>The manager.</p>\n    `;try{await saveEnviar({mail:email,mensaje});alert(\"Shift rotation sent for approval\");setEmail(\"\");}catch(err){console.error(\"Error saving message:\",err.message);alert(\"Could not save the message.\");}finally{setSending(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"page1-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Tomorrow\\u2019s Shift Overview\"}),loading?/*#__PURE__*/_jsx(Spinner,{text:\"Loading employees...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"page1-block\",children:tasks.map((task,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"page1-line\",children:buildShiftText(task,index)},task.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"page1-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter email address...\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,disabled:sending,className:\"send-btn\",children:sending?\"Sending...\":\"Send\"})]})]});}","map":{"version":3,"names":["React","useEffect","useState","getTasks","saveEnviar","Spinner","jsx","_jsx","jsxs","_jsxs","Page1","tasks","setTasks","loading","setLoading","email","setEmail","sending","setSending","baseHour","then","results","formatted","sort","a","b","Orden","map","item","id","objectId","title","Item","valor","Valor","Number","catch","err","console","error","message","formatHour","hour","h","suffix","display","buildShiftText","task","index","startHour","slice","reduce","acc","t","endHour","handleSend","alert","lines","i","mensaje","line","join","mail","className","children","text","type","placeholder","value","onChange","e","target","onClick","disabled"],"sources":["D:/00-DESARROLLO/REACT/Training/PORTFOLIO/TOMORROW-SHIFT/src/Pages/Page1.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getTasks, saveEnviar } from \"../services/backend\";\r\nimport { Spinner } from \"../Components/Spinner/Spinner\";\r\nimport \"./Page1.css\";\r\n\r\nexport function Page1() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [sending, setSending] = useState(false);\r\n\r\n  const baseHour = 6; // los turnos arrancan a las 6am\r\n\r\n  useEffect(() => {\r\n    getTasks()\r\n      .then((results) => {\r\n        const formatted = results\r\n          .sort((a, b) => a.Orden - b.Orden)\r\n          .map((item) => ({\r\n            id: item.objectId,\r\n            title: item.Item || \"Untitled\",\r\n            valor: item.Valor != null ? Number(item.Valor) : 1,\r\n          }));\r\n        setTasks(formatted);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err.message);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Convierte hora en formato AM/PM\r\n  const formatHour = (hour) => {\r\n    const h = hour % 24;\r\n    const suffix = h >= 12 ? \"pm\" : \"am\";\r\n    const display = h % 12 === 0 ? 12 : h % 12;\r\n    return `${display}${suffix}`;\r\n  };\r\n\r\n  // Construye texto de turno\r\n  const buildShiftText = (task, index) => {\r\n    const startHour = baseHour + tasks.slice(0, index).reduce((acc, t) => acc + t.valor, 0);\r\n    const endHour = startHour + task.valor;\r\n    return `${task.title} from ${formatHour(startHour)} to ${formatHour(endHour)}`;\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!email) {\r\n      alert(\"Please enter an email address.\");\r\n      return;\r\n    }\r\n    setSending(true);\r\n\r\n    const lines = tasks.map((t, i) => buildShiftText(t, i));\r\n\r\n    const mensaje = `\r\n      <p>Hi, this is the full rotation for tomorrow's shift:</p>\r\n      <ul>\r\n        ${lines.map((line) => `<li>${line}</li>`).join(\"\")}\r\n      </ul>\r\n      <p>Sincerely,<br/>The manager.</p>\r\n    `;\r\n\r\n    try {\r\n      await saveEnviar({ mail: email, mensaje });\r\n      alert(\"Shift rotation sent for approval\");\r\n      setEmail(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error saving message:\", err.message);\r\n      alert(\"Could not save the message.\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page1-container\">\r\n      <h4>Tomorrowâ€™s Shift Overview</h4>\r\n\r\n      {loading ? (\r\n        <Spinner text=\"Loading employees...\" />\r\n      ) : (\r\n        <div className=\"page1-block\">\r\n          {tasks.map((task, index) => (\r\n            <div key={task.id} className=\"page1-line\">\r\n              {buildShiftText(task, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Input email */}\r\n      <div className=\"page1-input\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email address...\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={handleSend} disabled={sending} className=\"send-btn\">\r\n          {sending ? \"Sending...\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}